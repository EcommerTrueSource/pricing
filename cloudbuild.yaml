steps:
# Build da imagem
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'southamerica-east1-docker.pkg.dev/${PROJECT_ID}/pricing-repo/pricing:${SHORT_SHA}', '.']

# Push para o Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'southamerica-east1-docker.pkg.dev/${PROJECT_ID}/pricing-repo/pricing:${SHORT_SHA}']

# Deploy no Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
  - 'run'
  - 'deploy'
  - 'pricing'
  - '--image=southamerica-east1-docker.pkg.dev/${PROJECT_ID}/pricing-repo/pricing:${SHORT_SHA}'
  - '--region=southamerica-east1'
  - '--platform=managed'
  - '--allow-unauthenticated'
  - '--set-secrets=/secrets/.env.local=env_pricing:latest'
  - '--update-env-vars=DOTENV_PATH=/secrets/.env.local'
  - '--set-cloudsql-instances=${PROJECT_ID}:southamerica-east1:pricing'
  - '--service-account=pricing-contract@${PROJECT_ID}.iam.gserviceaccount.com'
  - '--memory=1Gi'
  - '--cpu=1'

# Verificar se a aplicação está saudável (com mais detalhes)
- name: 'gcr.io/cloud-builders/curl'
  id: 'health-check'
  entrypoint: bash
  args:
    - '-c'
    - |
      echo "Aguardando aplicação ficar disponível..."
      # Adicionar um tempo para a aplicação iniciar completamente
      sleep 30

      # Verificar o health check com mais detalhes
      echo "Verificando health check da aplicação..."
      curl --retry 5 --retry-delay 10 -s -o /tmp/response.txt -w "%{http_code}" https://pricing-460815276546.southamerica-east1.run.app/api/health > /tmp/http_code

      # Verificar o código HTTP diretamente do arquivo
      if [ "$(cat /tmp/http_code)" = "200" ]; then
        echo "✅ Aplicação está saudável! Status HTTP: $(cat /tmp/http_code)"
        cat /tmp/response.txt
        exit 0
      else
        echo "❌ Falha no health check! Status HTTP: $(cat /tmp/http_code)"
        echo "Resposta recebida:"
        cat /tmp/response.txt
        exit 1
      fi

# Também taggar como latest após health check bem-sucedido
- name: 'gcr.io/cloud-builders/docker'
  id: 'tag-latest'
  waitFor: ['health-check']
  args: ['tag',
         'southamerica-east1-docker.pkg.dev/${PROJECT_ID}/pricing-repo/pricing:${SHORT_SHA}',
         'southamerica-east1-docker.pkg.dev/${PROJECT_ID}/pricing-repo/pricing:latest']

# Push da versão latest
- name: 'gcr.io/cloud-builders/docker'
  id: 'push-latest'
  waitFor: ['tag-latest']
  args: ['push', 'southamerica-east1-docker.pkg.dev/${PROJECT_ID}/pricing-repo/pricing:latest']

images:
- 'southamerica-east1-docker.pkg.dev/${PROJECT_ID}/pricing-repo/pricing:${SHORT_SHA}'
- 'southamerica-east1-docker.pkg.dev/${PROJECT_ID}/pricing-repo/pricing:latest'

timeout: '1800s'
