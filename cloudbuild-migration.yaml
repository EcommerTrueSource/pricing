steps:
# Executar migrações do banco de dados
- name: 'gcr.io/cloud-builders/docker'
  id: 'migracao-banco'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      # Criar diretório para secrets
      mkdir -p /workspace/secrets

      # Obter string de conexão
      echo "Obtendo string de conexão..."
      gcloud secrets versions access latest --secret=database_url_pricing > /workspace/secrets/conexao

      # Criar arquivo .env para o container
      echo "Preparando arquivo de variáveis..."
      echo "PRISMA_MIGRATE=true" > /workspace/secrets/variaveis
      echo "DEBUG=prisma:*" >> /workspace/secrets/variaveis

      # Adicionar a string de conexão ao arquivo (escapando corretamente)
      echo "DATABASE""_URL=$(cat /workspace/secrets/conexao)" >> /workspace/secrets/variaveis

      # Log seguro (sem exibir credenciais)
      echo "Arquivo de variáveis preparado com sucesso."

      # Executar container com migração
      echo "Executando migração..."
      docker run --rm \
        --env-file /workspace/secrets/variaveis \
        southamerica-east1-docker.pkg.dev/${PROJECT_ID}/pricing-repo/pricing:latest \
        sh -c 'cd /app && npx prisma migrate deploy --schema=/app/prisma/schema.prisma'

      # Verificar status
      result=$?
      if [ $result -eq 0 ]; then
        echo "Migração concluída com sucesso"
        # Limpar arquivos temporários
        rm -rf /workspace/secrets
      else
        echo "Falha na migração: código $result"
        exit 1
      fi

# Configuração global
timeout: '1800s'  # 30 minutos para todo o processo

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'  # Máquina com mais recursos para build eficiente
  dynamic_substitutions: true  # Suporte a substituições dinâmicas
