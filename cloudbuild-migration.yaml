steps:
# Executar migrações do banco de dados
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'migracao-banco'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      # Criar diretório para secrets
      mkdir -p /workspace/secrets

      # Obter string de conexão
      echo "Obtendo string de conexão..."
      gcloud secrets versions access latest --secret=database_url_pricing > /workspace/secrets/conexao

      # Verificar se a conexão foi obtida com sucesso
      if [ ! -s /workspace/secrets/conexao ]; then
        echo "Erro: Não foi possível obter a string de conexão do banco de dados"
        exit 1
      fi

      # Validar formato da string de conexão (sem exibir conteúdo)
      DB_URL=$(cat /workspace/secrets/conexao)
      if [[ ! "$DB_URL" =~ ^postgresql:// ]]; then
        echo "Erro: String de conexão não está no formato esperado (deve começar com postgresql://)"
        exit 1
      fi

      # Verifica se tem host na string
      if [[ ! "$DB_URL" =~ postgresql://[^/]+@[^/]+ ]]; then
        echo "Erro: String de conexão não contém informações de host válidas"
        exit 1
      fi

      echo "String de conexão validada com sucesso"

      # Criar arquivo .env dentro de um volume temporário para o Docker
      echo "Preparando ambiente para migração..."
      mkdir -p /workspace/prisma-env
      echo "$DB_URL" > /workspace/prisma-env/database_url

      # Executar container com migração montando volume
      echo "Executando migração..."
      docker run --rm \
        -v /workspace/prisma-env:/prisma-env \
        --entrypoint sh \
        southamerica-east1-docker.pkg.dev/${PROJECT_ID}/pricing-repo/pricing:latest \
        -c 'export DATABASE_URL=$(cat /prisma-env/database_url) && cd /app && echo "Database URL configurada" && npx prisma migrate deploy --schema=/app/prisma/schema.prisma'

      # Verificar status
      result=$?
      if [ $result -eq 0 ]; then
        echo "Migração concluída com sucesso"
        # Limpar arquivos temporários
        rm -rf /workspace/secrets /workspace/prisma-env
      else
        echo "Falha na migração: código $result"
        # Tentar obter mais detalhes sobre o erro
        echo "Tentando executar verificação da conexão..."
        docker run --rm \
          -v /workspace/prisma-env:/prisma-env \
          --entrypoint sh \
          southamerica-east1-docker.pkg.dev/${PROJECT_ID}/pricing-repo/pricing:latest \
          -c 'export DATABASE_URL=$(cat /prisma-env/database_url) && cd /app && echo "Verificando conexão..." && npx prisma db pull --force --schema=/app/prisma/schema.prisma'
        exit 1
      fi

# Configuração global
timeout: '1800s'  # 30 minutos para todo o processo

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'  # Máquina com mais recursos para build eficiente
  dynamic_substitutions: true  # Suporte a substituições dinâmicas
