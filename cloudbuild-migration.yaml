steps:
# Executar migrações do Prisma diretamente no Cloud Build
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'executar-migracao-prisma'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      # Criar um arquivo temporário para o .env
      echo "Configurando variáveis de ambiente para migração..."

      # Obter secrets do Secret Manager
      echo "Obtendo secrets do Secret Manager..."
      gcloud secrets versions access latest --secret=env_pricing > /workspace/.env.migration
      gcloud secrets versions access latest --secret=database_url_pricing >> /workspace/.env.migration

      # Verificar se os secrets foram obtidos corretamente
      if [ ! -s /workspace/.env.migration ]; then
        echo "❌ Falha ao obter secrets necessários"
        exit 1
      fi

      echo "✅ Secrets obtidos com sucesso"

      # Executar migração usando a imagem mais recente
      echo "Executando migração do Prisma..."

      # Usar a imagem do container para executar a migração
      docker run --rm \
        --env-file /workspace/.env.migration \
        --env PRISMA_MIGRATE=true \
        --env DEBUG=prisma:* \
        --env NODE_OPTIONS=--max-old-space-size=1536 \
        southamerica-east1-docker.pkg.dev/${PROJECT_ID}/pricing-repo/pricing:latest \
        /bin/sh -c "cd /app && npx prisma migrate deploy"

      # Verificar resultado
      result_code=$?
      if [ $result_code -eq 0 ]; then
        echo "✅ Migração concluída com sucesso!"
        # Limpar arquivo temporário
        rm /workspace/.env.migration
        exit 0
      else
        echo "❌ Migração falhou com código de saída: $result_code"
        # Limpar arquivo temporário
        rm /workspace/.env.migration
        exit 1
      fi
  timeout: '900s'  # 15 minutos

# Configuração global
timeout: '1200s'  # 20 minutos para todo o build

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'  # Máquina com mais recursos para build eficiente
  dynamic_substitutions: true  # Suporte a substituições dinâmicas
