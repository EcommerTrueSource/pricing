steps:
# Executar migrações do banco de dados
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'migracao-banco'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      # Criar diretório para secrets
      mkdir -p /workspace/secrets

      # Obter string de conexão
      echo "Obtendo string de conexão..."
      gcloud secrets versions access latest --secret=database_url_pricing > /workspace/secrets/conexao

      # Verificar se a conexão foi obtida com sucesso
      if [ ! -s /workspace/secrets/conexao ]; then
        echo "Erro: Não foi possível obter a string de conexão do banco de dados"
        exit 1
      fi

      # Log de confirmação
      echo "String de conexão obtida com sucesso"

      # Executar container com migração usando a string de conexão diretamente
      echo "Executando migração..."
      docker run --rm \
        -e DATABASE_URL="$(cat /workspace/secrets/conexao)" \
        -e PRISMA_MIGRATE=true \
        -e DEBUG=prisma:* \
        southamerica-east1-docker.pkg.dev/${PROJECT_ID}/pricing-repo/pricing:latest \
        sh -c 'cd /app && npx prisma migrate deploy --schema=/app/prisma/schema.prisma'

      # Verificar status
      result=$?
      if [ $result -eq 0 ]; then
        echo "Migração concluída com sucesso"
        # Limpar arquivos temporários
        rm -rf /workspace/secrets
      else
        echo "Falha na migração: código $result"
        # Imprimir logs do container para ajudar no debug
        echo "Últimos logs do container:"
        docker logs $(docker ps -lq) 2>&1 || echo "Não foi possível obter logs do container"
        exit 1
      fi

# Configuração global
timeout: '1800s'  # 30 minutos para todo o processo

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'  # Máquina com mais recursos para build eficiente
  dynamic_substitutions: true  # Suporte a substituições dinâmicas
