steps:
# Etapa única: Configurar Cloud SQL Proxy e executar migração
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
  id: 'migrar-prisma'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      # Instalar o Cloud SQL Proxy
      echo "Instalando Cloud SQL Proxy..."
      wget https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/v2.6.1/cloud-sql-proxy.linux.amd64 -O cloud_sql_proxy
      chmod +x cloud_sql_proxy

      # Iniciar o Cloud SQL Proxy em segundo plano e guardar PID em arquivo
      echo "Iniciando Cloud SQL Proxy..."
      ./cloud_sql_proxy --instances=${PROJECT_ID}:southamerica-east1:pricing=tcp:5432 --quiet &
      echo $! > /tmp/proxy.pid

      # Aguardar o proxy iniciar
      echo "Aguardando inicialização do proxy..."
      sleep 5

      # Verificar se o proxy está escutando
      if ! netstat -tulpn | grep :5432 > /dev/null; then
        echo "Erro: Cloud SQL Proxy não está escutando na porta 5432"
        kill $(cat /tmp/proxy.pid)
        exit 1
      fi

      echo "Cloud SQL Proxy configurado com sucesso"

      # Executar o Prisma Migrate usando Docker com a rede host
      echo "Executando migração do Prisma..."
      docker run --network=host --rm \
        -e DATABASE_URL="postgresql://pricing-system:True@%23012987@localhost:5432/contract-management?schema=public" \
        southamerica-east1-docker.pkg.dev/${PROJECT_ID}/pricing-repo/pricing:latest \
        sh -c "cd /app && npx prisma migrate deploy --schema=/app/prisma/schema.prisma"

      # Capturar o código de saída
      MIGRATION_RESULT=$?

      # Encerrar o proxy
      echo "Encerrando Cloud SQL Proxy..."
      kill $(cat /tmp/proxy.pid)

      # Retornar o resultado do comando de migração
      if [ $MIGRATION_RESULT -eq 0 ]; then
        echo "✅ Migração concluída com sucesso"
        exit 0
      else
        echo "❌ Falha na migração"
        exit 1
      fi

# Configuração global
timeout: '1800s'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
